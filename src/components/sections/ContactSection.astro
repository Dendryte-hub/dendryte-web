---
// Import the necessary dependencies.
import AuthBtn from "@components/ui/buttons/AuthBtn.astro";
import ContactIconBlock from "@components/ui/blocks/ContactIconBlock.astro";
import TextInput from "@components/ui/forms/input/TextInput.astro";
import EmailContactInput from "@components/ui/forms/input/EmailContactInput.astro";
import PhoneInput from "@components/ui/forms/input/PhoneInput.astro";
import TextAreaInput from "@components/ui/forms/input/TextAreaInput.astro";
import Icon from "@components/ui/icons/Icon.astro";

// Define the variables that will be used in this component
const title: string = "Contact us";
const subTitle: string =
  "Have questions or want to discuss a project? Reach out, and let's craft the perfect solution with our tools and services.";
const formTitle: string = "Fill in the form below";
const formSubTitle: string = "We'll get back to you in 1-2 business days.";

---
<!-- Contact Us -->
<section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
  <div class="mx-auto max-w-2xl lg:max-w-5xl">
    <div class="text-center">
      <h1
        class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
      >
        {title}
      </h1>
      <p class="mt-1 text-pretty text-neutral-600 dark:text-neutral-400">
        {subTitle}
      </p>
    </div>

    <div class="mt-12 grid items-center gap-6 lg:grid-cols-2 lg:gap-16">
      <div class="flex flex-col rounded-xl p-4 sm:p-6 lg:p-8">
        <h2
          class="mb-8 text-xl font-bold text-neutral-700 dark:text-neutral-300"
        >
          {formTitle}
        </h2>
        <!-- Form for user input with various input fields.-->
        <!-- Each field utilizes a different input component for the specific type of input (text, email, phone, and textarea)-->
        <form method="POST">
          <div class="grid gap-4">
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
              <TextInput
                id="hs-firstname-contacts"
                label="First Name"
                name="hs-firstname-contacts"
              />
              <TextInput
                id="hs-lastname-contacts"
                label="Last Name"
                name="hs-lastname-contacts"
              />
            </div>
            <EmailContactInput id="hs-email-contacts" />
            <PhoneInput id="hs-phone-number" />
            <TextAreaInput
              id="hs-about-contacts"
              label="Details"
              name="hs-about-contacts"
            />
          </div>

          <div class="mt-4 grid">
            <AuthBtn title="Send Message" />
          </div>

          <div class="mt-3 text-center">
            <p class="text-sm text-neutral-600 dark:text-neutral-400">
              {formSubTitle}
            </p>
          </div>
        </form>
      </div>

      <!--ContactIconBlocks are used to display different methods of contacting, including visiting office, email, browsing knowledgebase, and FAQ.-->
      <div class="divide-y divide-neutral-300 dark:divide-neutral-700">
        <ContactIconBlock
          heading="Knowledgebase"
          content="Browse through all of our knowledgebase articles."
          isLinkVisible={true}
          linkTitle="Visit guides & tutorials"
          linkURL="#"
          isArrowVisible={true}
          ><Icon name="question" />
        </ContactIconBlock>

        <ContactIconBlock
          heading="FAQ"
          content="Explore our FAQ for quick, clear answers to common queries."
          isLinkVisible={true}
          linkTitle="Visit FAQ"
          linkURL="#"
          isArrowVisible={true}
          ><Icon name="chatBubble" />
        </ContactIconBlock>

        <ContactIconBlock
          heading="Contact us by email"
          content="Prefer the written word? Drop us an email at"
          isLinkVisible={true}
          linkTitle="info@dendryte.xyz"
          linkURL="#"
          ><Icon name="envelopeOpen" />
        </ContactIconBlock>
      </div>
    </div>
  </div>
</section>
<script is:inline>
  const get = (id) => document.getElementById(id) || { value: '' }


  if (Astro.request.method === "POST") {
    console.error("Received a POST");
    try {
      const data = await Astro.request.formData();
      console.log("Received data: ", data);
      const first_name = data.get('hs-firstname-contacts');
      const last_name = data.get('hs-lastname-contacts');
      const email = data.get('hs-email-contacts');
      const phone_number = data.get('hs-phone-number');
      const detail = data.get('hs-about-contacts');

      console.log("Received data: ", data);
    } catch(error) {
    if (error instanceof Error) {
      console.error(error.message);
      }
    }

  }

  // save and retrieve generic formdata from localstorage
  const getFormData = () => {
    const store = Object.create(null)
    store.first_name = get('hs-firstname-contacts').value
    store.last_name = get('hs-lastname-contacts').value
    store.email = get('hs-email.contacts')?.value
    store.phone_number = get('hs-phone-number')?.value
    store.detail = get('hs-about-contacts')?.value
    return store
  }

  // end: localStorage

  // window.onload = () => {} // don't know why this won't work

  const sendmail = async () => {
    console.log("Attempting to send mail")
    const { first_name, last_name, email, phone_number, detail } = getFormData()
    const data = await fetch('/api/sendmail.json', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({first_name, last_name, email, phone_number, detail}),
    })
      .then((res) => {
        if (!res.ok) {
          throw new Error(res.status)
        }
        return res.json()
      })
      .catch((err) => {
        console.log('Error', err)
        throw new Error('Network error.')
      })
    console.log(data)
  }
</script>
